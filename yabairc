# default layout (can be bsp, stack or float)
yabai -m config layout bsp

# new window spawns to the right if vertical split, or bottom if horizontal split
yabai -m config window_placement second_child

# padding set to 12px
# Function to get the UUID of the primary display
get_primary_display_uuid() {
    yabai -m query --displays | jq -r '.[] | select(.["has-focus"] == true) | .uuid'
}

# Get the UUID of the primary display
primary_display_uuid=$(get_primary_display_uuid)

# Set padding based on the UUID (Mac laptop)
if [ "$primary_display_uuid" = "37D8832A-2D66-02CA-B9F7-8F30A301B230" ]; then
    padding=0
else
    padding=30
fi

# Apply the padding configuration
yabai -m config top_padding $padding
yabai -m config bottom_padding 0
yabai -m config left_padding 0
yabai -m config right_padding 0
yabai -m config window_gap 0

# modifier for clicking and dragging with mouse
yabai -m config mouse_modifier alt
# set modifier + left-click drag to move window
yabai -m config mouse_action1 move
# set modifier + right-click drag to resize window
yabai -m config mouse_action2 resize

# when window is dropped in center of another window, swap them (on edges it will split it)
yabai -m mouse_drop_action swap

yabai -m rule --add app="^Simulator$" manage=on floating=off
yabai -m window $(yabai -m query --windows | jq '.[] | select(.app == "Simulator").id') --toggle float
# disable specific apps
yabai -m rule --add app="^System Settings$" manage=off
yabai -m rule --add app="^Microsoft Remote Desktop$" manage=off
yabai -m rule --add app="^Calculator$" manage=off
yabai -m rule --add app="^Karabiner-Elements$" manage=off
yabai -m rule --add app="^QuickTime Player$" manage=off
