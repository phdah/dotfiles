# This file has been auto-generated by i3-config-wizard(1).
# It will not be overwritten, so edit it as you like.
#
# Should you change your keyboard layout some time, delete
# this file and re-run i3-config-wizard(1).
#

# i3 config file (v4)
#
# Please see https://i3wm.org/docs/userguide.html for a complete reference!

set $mod Mod4

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
font pango:monospace 8

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
#font pango:DejaVu Sans Mono 8

# The combination of xss-lock, nm-applet and pactl is a popular choice, so
# they are included here as an example. Modify as you see fit.

# xss-lock grabs a logind suspend inhibit lock and will use i3lock to lock the
# screen before suspend. Use loginctl lock-session to lock your screen.
exec --no-startup-id xss-lock --transfer-sleep-lock -- i3lock --nofork

# NetworkManager is the most popular way to manage wireless networks on Linux,
# and nm-applet is a desktop environment-independent system tray GUI for it.
exec --no-startup-id nm-applet

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal, based on which i have installed
bindsym $mod+Control+j exec --no-startup-id sh -c 'command -v kitty &>/dev/null && exec kitty || exec gnome-terminal'
bindsym $mod+Control+c exec --no-startup-id sh -c 'google-chrome'
bindsym $mod+g exec guake-toggle

# set up F1 keys
# Volume
bindsym "XF86AudioMute" exec "pactl set-sink-mute `pactl get-default-sink` toggle && dunstctl close-all && notify-send -t 1000 'Sound' $(printf '%s' $(pactl list sinks | perl -000lne 'if(/'$(pactl get-default-sink)'/){/.*?(Mute:.*)/; print $1}'))"
bindsym "XF86AudioLowerVolume" exec "pactl set-sink-volume `pactl get-default-sink` -10% && dunstctl close-all && notify-send -t 1000 'Sound' $(pactl list sinks | perl -000ne 'if(/'$(pactl get-default-sink)'/){/Volume:.*?(\d*%)/; print $1}')"
bindsym "XF86AudioRaiseVolume" exec "pactl set-sink-volume `pactl get-default-sink` +10% && dunstctl close-all && notify-send -t 1000 'Sound' $(pactl list sinks | perl -000ne 'if(/'$(pactl get-default-sink)'/){/Volume:.*?(\d*%)/; print $1}')"

# Screen brightness
bindsym "XF86MonBrightnessUp" exec "brightnessctl --device='intel_backlight' set +10% && dunstctl close-all && notify-send -t 1000 'Brightness' $(brightnessctl --device='intel_backlight' | rg 'Current brightness' | cut -d'(' -f2 | cut -d ')' -f1)"
bindsym "XF86MonBrightnessDown" exec "brightnessctl --device='intel_backlight' set 10%- && dunstctl close-all && notify-send -t 1000 'Brightness' $(brightnessctl --device='intel_backlight' | rg 'Current brightness' | cut -d'(' -f2 | cut -d ')' -f1)"

# Screen laptop
bindsym "XF86AudioPlay" exec "~/.screenlayout/laptop.sh"

# kill focused window
bindsym $mod+Shift+q kill

# change focus
bindsym $mod+h focus left
bindsym $mod+l focus right
bindsym $mod+j focus down
bindsym $mod+k focus up

# move focused window
bindsym $mod+Shift+h move left
bindsym $mod+Shift+l move right
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up

# toggle split in vertical/horizontal orientation
bindsym $mod+v split toggle

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1"
set $ws2 "2"
set $ws3 "3"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
set $ws10 "10"

# switch to workspace
bindsym $mod+1 workspace number $ws1
bindsym $mod+2 workspace number $ws2
bindsym $mod+3 workspace number $ws3
bindsym $mod+4 workspace number $ws4
bindsym $mod+5 workspace number $ws5
bindsym $mod+6 workspace number $ws6
bindsym $mod+7 workspace number $ws7
bindsym $mod+8 workspace number $ws8
bindsym $mod+9 workspace number $ws9
bindsym $mod+0 workspace number $ws10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace number $ws1
bindsym $mod+Shift+2 move container to workspace number $ws2
bindsym $mod+Shift+3 move container to workspace number $ws3
bindsym $mod+Shift+4 move container to workspace number $ws4
bindsym $mod+Shift+5 move container to workspace number $ws5
bindsym $mod+Shift+6 move container to workspace number $ws6
bindsym $mod+Shift+7 move container to workspace number $ws7
bindsym $mod+Shift+8 move container to workspace number $ws8
bindsym $mod+Shift+9 move container to workspace number $ws9
bindsym $mod+Shift+0 move container to workspace number $ws10

# move workspace
bindsym $mod+Shift+Left move workspace to output left
bindsym $mod+Shift+Right move workspace to output right
bindsym $mod+Shift+Up move workspace to output up
bindsym $mod+Shift+Down move workspace to output down

# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -B 'Yes, exit i3' 'i3-msg exit'"

# close all notifications
bindsym Control+space exec "dunstctl close-all"

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym h resize shrink width 10 px or 10 ppt
        bindsym j resize grow height 10 px or 10 ppt
        bindsym k resize shrink height 10 px or 10 ppt
        bindsym l resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape or $mod+r
        bindsym Control+j mode "default"
        bindsym Control+k mode "default"
        bindsym $mod+r mode "default"
}

bindsym $mod+r mode "resize"

# class                 border  bground text    indicator child_border
client.focused          #88C0D0 #88C0D0 #88C0D0 #03B4A8   #88C0D0
client.focused_inactive #2E3440 #2E3440 #2E3440 #2E3440   #2E3440
client.unfocused        #2E3440 #2E3440 #2E3440 #2E3440   #2E3440
client.urgent           #2E3440 #2E3440 #2E3440 #FF4242   #FF4242
client.placeholder      #000000 #0C0C0C #FFFFFF #000000   #0C0C0C

client.background       #000000

bar {
    colors {
        background #2E3440
            statusline #FFFFFF
            separator  #666666

            focused_workspace  #88C0D0 #88C0D0 #FFFFFF
            active_workspace   #222222 #222222 #FFFFFF
            inactive_workspace #222222 #222222 #888888
            urgent_workspace   #BF616A #BF616A #FFFFFF
            binding_mode       #BF616A #BF616A #FFFFFF
    }
    tray_output none
    status_command i3status --config /home/phdah/.config/i3/i3status.conf
    separator_symbol "|"
}

# Set up search bar color
bindsym $mod+d exec "dmenu_run -nf '#FFFFFF' -nb '#2E3440' -sb '#88C0D0' -sf '#000000' -fn 'monospace-10' -p 'dmenu prompt &gt;'"

# Screendump select or whole screen
bindsym $mod+p exec --no-startup-id maim -s | tee ~/downloads/screenshot_$(date +%s).png | xclip -selection clipboard -t image/png
bindsym $mod+Shift+p exec --no-startup-id maim -i | tee ~/downloads/screenshot_$(date +%s).png | xclip -selection clipboard -t image/png

# Remove titlebar
default_border pixel
for_window [class="Google-chrome" title="Google Chrome"] border pixel

# Set up computer unique touchpad
exec sh ~/.i3mousepad

# Start dunst notifications
exec dunst &
